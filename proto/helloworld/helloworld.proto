// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/zencore/helloworld/proto/helloworld";

import "google/protobuf/timestamp.proto";

package helloworld;

// The greeting service definition.
service ChatService {
  // Sends a greeting
  rpc ListMessages (ListMessagesRequest) returns (ListMessagesResponse) {}
  rpc CommitMessage (CommitMessageRequest) returns (CommitMessageResponse) {}
}

// The request message containing the user's name.
message ListMessagesRequest {
  string ExternalHistoryId = 1;
  repeated Message messages = 2;
}

message Message {
  enum STATE{
      STATE_OK = 0;
   }

  string MessageUuid = 1;
  string ExternalHistoryId = 2;
  STATE State = 3;
  string content = 4;
  google.protobuf.Timestamp createTime = 5;
  google.protobuf.Timestamp lastUpdateTime = 6;

}

// The response message containing the greetings
message ListMessagesResponse {
  repeated Message messages = 1;
}

message CommitMessageRequest {
  Message message = 1;
}

message CommitMessageResponse {

}

